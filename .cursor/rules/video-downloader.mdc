---
description: "Video downloader specific functionality and architecture patterns"
---

# 视频下载器功能规范 🎬

## 核心下载逻辑
- 使用 `yt-dlp` 作为主要下载引擎
- 支持多种视频网站（YouTube、PornHub 等）
- 实现下载进度监控和用户反馈
- 提供下载队列管理

## 架构设计原则
- 下载器与界面分离：核心逻辑在 [universal_downloader.py](mdc:universal_downloader.py)
- 配置管理：使用 [portable/config_manager.py](mdc:portable/config_manager.py)
- 错误处理：统一使用 [portable/error_handler.py](mdc:portable/error_handler.py)
- 路径管理：通过 [portable/path_manager.py](mdc:portable/path_manager.py) 处理

## Cookie 管理
- Cookie 存储在 [cookies/](mdc:cookies/) 目录
- 使用 [cookie_manager.py](mdc:cookie_manager.py) 统一管理
- 支持多种 Cookie 格式（JSON、Netscape 格式）
- 提供 Cookie 验证和更新机制

## 用户界面设计
- GUI 基于 tkinter，主要文件：[gui_downloader.py](mdc:gui_downloader.py)
- 提供进度条、日志显示和配置面板
- 支持拖拽 URL 输入
- 实现主题切换功能

## 多平台支持
- Windows：使用 `.bat` 启动脚本
- Linux/macOS：使用 `.sh` 启动脚本
- PowerShell：使用 `.ps1` 脚本
- 路径处理使用 `pathlib` 确保跨平台兼容

## 性能优化
- 并发下载支持（可配置线程数）
- 断点续传功能
- 网络重试机制
- 内存使用优化

## 错误处理策略
- 网络错误：自动重试，记录失败原因
- 权限错误：提供解决方案提示
- 配置错误：自动修复或重置
- 用户取消：优雅停止下载

## 日志和监控
- 下载进度实时显示
- 错误日志记录到 [logs/](mdc:logs/) 目录
- 支持不同日志级别
- 提供调试模式

## 配置系统
- 主配置文件：[downloader_config.json](mdc:downloader_config.json)
- 支持用户自定义输出目录
- 质量选择和格式偏好设置
- 网络代理配置

## 测试框架
- 单元测试：[tests/](mdc:tests/) 目录
- 功能测试：针对不同网站的下载测试
- 性能测试：并发下载和大文件处理
- 回归测试：确保更新不破坏现有功能

## 安全考虑
- 输入验证：URL 格式检查
- 路径遍历防护
- 安全的 Cookie 存储
- 避免执行恶意代码

## 扩展性设计
- 插件架构：支持新的视频网站
- 自定义处理器：针对特定网站的处理逻辑
- 格式转换：支持多种输出格式
- 元数据提取：标题、描述、缩略图等

## 用户体验优化
- 友好的错误提示
- 进度反馈和时间估算
- 快捷键支持
- 历史记录和收藏功能

## 部署和分发
- 便携版本：无需安装，直接运行
- 依赖管理：自动检查和安装必要组件
- 更新机制：支持自动更新
- 多语言支持：界面本地化
